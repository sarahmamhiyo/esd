/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package invoicetypeutils;

import dbutils.DbManager;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Tinashe
 */
public class DbViewer extends javax.swing.JPanel {

    /**
     * Creates new form DbViewer
     */
    public DbViewer() {
        initComponents();

        veiw_all_btn.addActionListener(new ViewAllListener());

        initRecordsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        veiw_all_btn = new javax.swing.JButton();
        status_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        records_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        largest_total_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        largest_total_invoice_label = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        largest_total_invoice_submitted_label = new javax.swing.JLabel();
        largest_total_invoice_signed_label = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        largest_processed_total_label = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        largest_processed_total_invoice_label = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        largest_processed_total_invoice_submitted_label = new javax.swing.JLabel();
        largest_processed_total_invoice_signed_label = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        veiw_all_btn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        veiw_all_btn.setText("View All");

        status_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        status_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        status_label.setText("-");

        records_table.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        records_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(records_table);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        jLabel1.setText("Largest Grand Total:");

        largest_total_label.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        largest_total_label.setText("-");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel2.setText("Invoice Name:");

        largest_total_invoice_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        largest_total_invoice_label.setText("-");

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel3.setText("Submitted:");

        largest_total_invoice_submitted_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        largest_total_invoice_submitted_label.setText("-");

        largest_total_invoice_signed_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        largest_total_invoice_signed_label.setText("-");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel4.setText("Signed:");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        jLabel5.setText("Largest Processed Total:");

        largest_processed_total_label.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        largest_processed_total_label.setText("-");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel6.setText("Invoice Name:");

        largest_processed_total_invoice_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        largest_processed_total_invoice_label.setText("-");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel7.setText("Submitted:");

        largest_processed_total_invoice_submitted_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        largest_processed_total_invoice_submitted_label.setText("-");

        largest_processed_total_invoice_signed_label.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        largest_processed_total_invoice_signed_label.setText("-");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel8.setText("Signed:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(veiw_all_btn)
                            .addComponent(status_label, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(largest_total_label, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(largest_total_invoice_label, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(largest_total_invoice_submitted_label, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(largest_total_invoice_signed_label, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largest_processed_total_invoice_signed_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largest_processed_total_invoice_submitted_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largest_processed_total_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largest_processed_total_invoice_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(veiw_all_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(largest_total_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(largest_total_invoice_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(largest_total_invoice_submitted_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(largest_total_invoice_signed_label)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(largest_processed_total_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(largest_processed_total_invoice_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(largest_processed_total_invoice_submitted_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(largest_processed_total_invoice_signed_label))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JLabel largest_processed_total_invoice_label;
    private static javax.swing.JLabel largest_processed_total_invoice_signed_label;
    private static javax.swing.JLabel largest_processed_total_invoice_submitted_label;
    private static javax.swing.JLabel largest_processed_total_label;
    private static javax.swing.JLabel largest_total_invoice_label;
    private static javax.swing.JLabel largest_total_invoice_signed_label;
    private static javax.swing.JLabel largest_total_invoice_submitted_label;
    private static javax.swing.JLabel largest_total_label;
    private static javax.swing.JTable records_table;
    private static javax.swing.JLabel status_label;
    private static javax.swing.JButton veiw_all_btn;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel recordsTableModel = new DefaultTableModel(0, 8);
    String TAG = "DbViewer";

    void initRecordsTable() {
        records_table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // add header of the table
        String header[] = new String[]{"invoice_id", "file_name", "invoice_number", "grand_total", "invoice_to", "signed", "submitted", "signature"};
        recordsTableModel.setColumnIdentifiers(header);
        records_table.setModel(recordsTableModel);
        resizeColumnWidth(records_table);
    }

    class ViewAllListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            //Get all records from db
            DbManager db_manager = new DbManager();
            HashMap<String, HashMap<String, String>> records = db_manager.get_all_invoice_data_new();
            if (records != null && records.size() > 0) {
                //Add the records to table
                populateTable(records);
            } else {
                status_label.setText("No records found in database.");
            }

        }

    }

    void populateTable(HashMap<String, HashMap<String, String>> records) {
        if (records != null && records.size() > 0) {
            status_label.setText(records.size() + " records found.");

            NumberFormat format = NumberFormat.getCurrencyInstance();
            double largest_total = 0.00, largest_total_processed = 0.00, lowest_total = 0.00;
            String largest_invoice_name = "", largest_total_invoice_submitted = "", largest_total_invoice_signed = "";
            String largest_processed_invoice_name = "", largest_processed_total_invoice_submitted = "", largest_processed_total_invoice_signed = "";

            for (Object key : records.keySet()) {
                String invoice_id = (String) key;
                HashMap<String, String> row_values = records.get(invoice_id);
                String signed_status = "not yet signed";
                if (row_values.get("signed").equalsIgnoreCase("1")) {
                    signed_status = "signed";
                }

                Object grand_total_str = "";
                try {
                    String value = row_values.get("grand_total").replace(" ", "").replace(",", "").replace("US", "");
                    grand_total_str = format.parse(value);

                } catch (ParseException ex) {
                    Logger.getLogger(DbViewer.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (grand_total_str != null || !grand_total_str.equals("")) {
                    double amount = Double.parseDouble(grand_total_str.toString());
                    if (amount > largest_total) {
                        largest_total = amount;
                        largest_invoice_name = row_values.get("file_name");
                        largest_total_invoice_submitted = row_values.get("submitted");
                        largest_total_invoice_signed = signed_status;
                    } else if (amount < lowest_total) {
                        lowest_total = amount;
                    }

                    if (signed_status.equalsIgnoreCase("signed")) {
                        if (amount == largest_total) {
                            largest_total_processed = amount;
                            largest_processed_invoice_name = row_values.get("file_name");
                            largest_processed_total_invoice_submitted = row_values.get("submitted");
                            largest_processed_total_invoice_signed = signed_status;
                        }
                    }
                }

                String[] row_data = new String[]{
                    row_values.get("invoice_id"),
                    row_values.get("file_name"),
                    row_values.get("invoice_number"),
                    "$" + grand_total_str,
                    row_values.get("invoice_to"),
                    signed_status,
                    row_values.get("submitted"),
                    row_values.get("signature")
                };

                recordsTableModel.addRow(row_data);
                resizeColumnWidth(records_table);
            }
            
            //Set largest invoice
            largest_total_label.setText("$" + largest_total);
            largest_total_invoice_label.setText(largest_invoice_name);
            largest_total_invoice_submitted_label.setText(largest_total_invoice_submitted);
            largest_total_invoice_signed_label.setText(largest_total_invoice_signed);
            //Set largest invoice signed
            largest_processed_total_label.setText("$" + largest_total_processed);
            largest_processed_total_invoice_label.setText(largest_processed_invoice_name);
            largest_processed_total_invoice_submitted_label.setText(largest_processed_total_invoice_submitted);
            largest_processed_total_invoice_signed_label.setText(largest_processed_total_invoice_signed);
            

        }
    }

    void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
            if (width > 300) {
                width = 300;
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }

}
